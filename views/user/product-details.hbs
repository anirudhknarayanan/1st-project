<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<!-- Bootstrap 4 JS (Make sure it matches your Bootstrap CSS version) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>




<style>
    /* CSS Variables */
    .product__details__pic__item {
        position: relative;
        overflow: hidden;
    }

    .image-zoom-container {
        position: fixed;
        top: 50%;
        right: 10%;
        transform: translateY(-50%);
        width: 300px;
        height: 300px;
        border: 2px solid #ddd;
        background-color: #fff;
        background-repeat: no-repeat;
        background-size: 200%;
        background-position: center;
        transition: all 0.3s ease;
        z-index: 1000;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
        display: none;
    }

    .zoom-lens {
        position: absolute;
        border: 2px solid rgba(0, 0, 0, 0.3);
        width: 100px;
        height: 100px;
        background: rgba(255, 255, 255, 0.2);
        pointer-events: none;
        display: none;
        z-index: 999;
    }

    .product__details__pic__item img {
        cursor: zoom-in;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .toastify {
        animation: fadeInUp 0.5s ease-in-out;
    }

    /* Green tick animation */
    @keyframes tickPop {
        0% {
            transform: scale(0);
            opacity: 0;
        }

        50% {
            transform: scale(1.3);
            opacity: 1;
        }

        100% {
            transform: scale(1);
        }
    }

    .toastify-avatar {
        width: 24px;
        height: 24px;
        animation: tickPop 0.5s ease-in-out;
    }

    /* Improved quantity and add to cart section */
    .product-actions-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        margin: 15px 0;
    }

    @media (min-width: 768px) {
        .product-actions-container {
            flex-direction: row;
            justify-content: center;
            flex-wrap: wrap;
            gap: 15px;
        }
    }

    .buy-now-btn {
        padding: 15px 80px;
        display: inline-block;
        font-size: 13px;
        font-weight: 700;
        text-transform: uppercase;
        color: #ffffff;
        background: #000000;
        letter-spacing: 4px;
        margin-bottom: 15px;
        border-radius: 4px;
        width: 100%;
        max-width: 300px;
        text-align: center;
    }

    .custom-quantity-input {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 4px;
        overflow: hidden;
        width: fit-content;
        margin: 0 auto 15px;
    }

    @media (min-width: 768px) {
        .custom-quantity-input {
            margin: 0;
        }
    }

    .quantity-btn {
        background: #000000;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.2s;
    }

    .quantity-btn:hover {
        background: #e9ecef;
    }

    .quantity-value {
        width: 40px;
        text-align: center;
        border: none;
        border-left: 1px solid #ddd;
        border-right: 1px solid #ddd;
        padding: 8px 0;
        font-size: 14px;
    }

    .quantity-value::-webkit-inner-spin-button,
    .quantity-value::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .add-to-cart-btn {
        background: #000;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        margin-left: 10px;
        white-space: nowrap;
    }

    .add-to-cart-btn:hover {
        background: #333;
    }

    /* Wishlist button styling */
    .wishlist-btn {
        display: inline-flex;
        align-items: center;
        margin: 10px auto 20px;
        color: #666;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .wishlist-btn:hover {
        color: #ff3e6c;
        text-decoration: none;
    }

    .wishlist-btn i {
        margin-right: 5px;
        font-size: 16px;
    }

    /* Related products styling */
    .related-products-container {
        /* display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 20px;
            width: 100%; */
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        /* Default to 2 columns for mobile */
        gap: 10px;
        width: 100%;
    }

    .product__item {
        border: 1px solid #f0f0f0;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background: #fff;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .product__item:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    .product__item__pic {
        position: relative;
        padding-top: 100%;
        /* 1:1 Aspect Ratio */
        overflow: hidden;
    }

    .product__item__pic img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .product__item:hover .product__item__pic img {
        transform: scale(1.05);
    }

    .product__item__text {
        padding: 15px;
        text-align: center;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .product__item__text h6 {
        margin-bottom: 10px;
        font-weight: 600;
        font-size: 14px;
        line-height: 1.4;
        height: 40px;
        overflow: hidden;
    }

    .product__item .rating {
        margin-bottom: 8px;
    }

    .product__item .rating i {
        color: #f8b500;
        font-size: 12px;
    }

    .product__item__text p {
        margin-bottom: 15px;
        font-size: 14px;
    }

    .product__item__text .add-cart-btn {
        background-color: black;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        font-size: 13px;
        transition: all 0.3s ease;
        margin-top: auto;
    }

    .product__item__text .add-cart-btn:hover {
        background-color: #333;
    }

    .label {
        position: absolute;
        top: 10px;
        left: 10px;
        background: #ff3e6c;
        color: #fff;
        padding: 3px 8px;
        font-size: 12px;
        border-radius: 3px;
        z-index: 1;
    }

    /* Thumbnail navigation for mobile */
    @media (max-width: 767px) {
        .product-thumbs-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 15px;
        }

        .product-thumb {
            width: 60px;
            height: 60px;
            border: 1px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
            cursor: pointer;
        }

        .product-thumb.active {
            border: 2px solid #000;
        }

        .product-thumb img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .nav-tabs {
            display: none;
        }
    }

    @media (max-width: 767px) {
        .product__details__pic__item img {
            touch-action: pinch-zoom;
        }
    }

    /* Medium screens */
    @media (min-width: 768px) {
        .related-products-container {
            grid-template-columns: repeat(3, 1fr);
            /* 3 columns for medium screens */
            gap: 15px;
        }
    }

    /* Large screens */
    @media (min-width: 992px) {
        .related-products-container {
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            /* Original behavior for larger screens */
            gap: 20px;
        }
    }

    /* Make product items more compact on mobile */
    @media (max-width: 767px) {
        .product__item__text h6 {
            font-size: 12px;
            height: 34px;
        }

        .product__item__text p {
            font-size: 12px;
            margin-bottom: 10px;
        }

        .product__item__text .add-cart-btn {
            padding: 6px 10px;
            font-size: 11px;
        }

        .product__item .rating i {
            font-size: 10px;
        }
    }
</style>

<!-- Shop Details Section Begin -->
<!-- Shop Details Section Begin -->
<section class="shop-details" style="overflow-x: hidden;">
    <div class="product__details__pic">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__breadcrumb">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Product Details</span>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Mobile view thumbnails -->
                <div class="col-12 d-md-none">
                    <div class="product-thumbs-container">
                        {{#each product.productImage}}
                        <div class="product-thumb {{#if @first}}active{{/if}}" data-target="#tabs-{{@index}}">
                            <img src="/uploads/product-images/{{this}}" alt="product thumbnail">
                        </div>
                        {{/each}}
                    </div>
                </div>

                <!-- Desktop side thumbnails -->
                <div class="col-lg-3 col-md-3 d-none d-md-block">
                    <ul class="nav nav-tabs" role="tablist">
                        {{#each product.productImage}}
                        <li class="nav-item">
                            <a class="nav-link {{#if @first}}active{{/if}}" data-toggle="tab" href="#tabs-{{@index}}"
                                role="tab">
                                <div class="product__thumb__pic set-bg">
                                    <img src="/uploads/product-images/{{this}}" alt="product image" width="100px">
                                </div>
                            </a>
                        </li>
                        {{/each}}
                    </ul>
                </div>

                <!-- Main Image -->
                <div class="col-lg-6 col-md-9 col-12">
                    <div class="tab-content">
                        {{#each product.productImage}}
                        <div class="tab-pane {{#if @first}}active{{/if}}" id="tabs-{{@index}}" role="tabpanel">
                            <div class="product__details__pic__item">
                                <img src="/uploads/product-images/{{this}}" alt="product image" class="img-fluid">
                            </div>
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="product__details__content">
        <div class="container">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-8">
                    <div class="product__details__text">
                        <h4>{{product.productName}}</h4>

                        <div class="rating">
                            <i class="fa fa-star"></i><i class="fa fa-star"></i>
                            <i class="fa fa-star"></i><i class="fa fa-star"></i>
                            <i class="fa fa-star-o"></i>
                            <span> - 5 Reviews</span>
                        </div>

                        <h3>₹{{formatINR product.salePrice}}
                            <span class="text-muted"><strike>{{formatINR product.regularPrice}}</strike></span>
                        </h3>

                        <p>{{product.description}}</p>
                        <p>{{product.brand}}</p>
                        {{#isGreaterThanZero product.quantity}}
                        <div class="product-actions-container">
                            <div class="d-flex align-items-center">
                                <div class="custom-quantity-input">
                                    <button class="quantity-btn"
                                        onclick="updateQuantity('decrease', '{{product._id}}')">-</button>
                                    <input type="number" class="quantity-value" id="product-quantity-{{product._id}}"
                                        value="1" min="1" max="5" readonly>
                                    <button class="quantity-btn"
                                        onclick="updateQuantity('increase', '{{product._id}}')">+</button>
                                </div>

                                {{#if isinCart}}
                                <button class="add-to-cart-btn added" disabled>
                                    Go to Cart
                                </button>
                                {{else}}
                                <button onclick="addToCart('{{product._id}}', {{product.quantity}},this)"
                                    class="add-to-cart-btn">
                                    Add to Cart
                                </button>
                                {{/if}}
                            </div>
                        </div>
                        {{/isGreaterThanZero}}



                        <div class="text-center">
                            <a href="#" onclick="event.preventDefault(); toggleWishlist('{{product._id}}', this)"
                                class="wishlist-btn {{#if isinWishlist}}in-wishlist{{/if}}">
                                <i class="fa fa-heart"></i>
                                {{#if isinWishlist}}Wishlisted{{else}}Add to wishlist{{/if}}
                            </a>
                        </div>

                        <div class="product__details__last__option">
                            <h5 class="text-center"><span>Guaranteed Safe Checkout</span></h5>
                            <div class="text-center mb-3">
                                <img src="/img/shop-details/details-payment.png" alt="" class="img-fluid"
                                    style="max-width: 300px;">
                            </div>
                            <ul class="pl-0">
                                {{#isGreaterThanZero product.quantity}}
                                <li style="color: rgb(0, 134, 18);"><span>Availability:</span> {{product.quantity}} in
                                    stock</li>
                                {{else}}
                                <li style="color: red;"><span>Availability:</span> Out of stock</li>
                                {{/isGreaterThanZero}}

                                <li><span>Categories:</span> {{product.category.name}}</li>
                                {{#if product.brand.brandName}}
                                <li><span>Brand:</span> {{product.brand.brandName}}</li>
                                {{/if}}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#tabs-5" role="tab">Description</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tabs-6" role="tab">Customer Reviews(5)</a>
                            </li>
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane active" id="tabs-5" role="tabpanel">
                                <div class="product__details__tab__content">
                                    <div class="product__details__tab__content__item">
                                        <h5>Products Information</h5>
                                        <p>{{product.description}}</p>
                                        <p>{{product.category.description}}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane" id="tabs-6" role="tabpanel">
                                <div class="product__details__tab__content">
                                    <div class="product__details__tab__content__item">
                                        <h5>Products Information</h5>
                                        <p>A Pocket PC is a handheld computer... (static content)</p>
                                    </div>
                                    <div class="product__details__tab__content__item">
                                        <h5>Material used</h5>
                                        <p>Polyester is deemed lower quality... (static content)</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Shop Details Section End -->

<!-- Related Section Begin -->

<section class="related spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h3 class="related-title">Related Products</h3>
            </div>
        </div>

        <div class="related-products-container">
            {{#each relatedProducts}}
            <div class="product__item">
                <a href="/productDetails?id={{this._id}}">
                    <div class="product__item__pic">
                        <span class="label">New</span>
                        <img src="/uploads/product-images/{{this.productImage.[0]}}" alt="{{this.productName}}">
                    </div>
                </a>
                <div class="product__item__text">
                    <h6>{{this.productName}}</h6>
                    <div class="rating">
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                        <i class="fa fa-star"></i>
                    </div>
                    <p>
                        Price: ₹{{formatINR this.finalPrice}}
                        <span class="text-muted">
                            <strike>₹{{formatINR this.salePrice}}</strike>
                        </span>
                    </p>
                    <button class="add-cart-btn" onclick="addToCart('{{this._id}}')">
                        + Add to Cart
                    </button>
                </div>
            </div>
            {{/each}}
        </div>
    </div>
</section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // ✅ IMPROVED: Global Zoom Setup Function with better cleanup
    function setupZoom($image) {
        if (!$image || !$image.length) {
            console.log('No image provided to setupZoom');
            return;
        }

        console.log('Setting up zoom for image:', $image.attr('src'));

        const $container = $image.closest('.product__details__pic__item');

        // ✅ IMPROVED: Clean up any existing zoom elements
        $container.find('.zoom-lens').remove();
        $image.off('.zoom');

        // ✅ IMPROVED: Remove zoom from all other images to prevent conflicts
        $('.product__details__pic__item img').not($image).off('.zoom');
        $('.zoom-lens').not($container.find('.zoom-lens')).remove();

        const $zoomLens = $('<div class="zoom-lens"></div>');
        $container.append($zoomLens);

        let $zoomContainer = $('.image-zoom-container');
        if (!$zoomContainer.length) {
            $zoomContainer = $('<div class="image-zoom-container"></div>').appendTo('body');
        }

        // ✅ IMPROVED: Add mouseenter event to ensure zoom is ready
        $image.on('mouseenter.zoom', function () {
            console.log('Mouse entered image, zoom ready');
        });

        $image.on('mousemove.zoom', function (e) {
            const offset = $image.offset();
            const x = e.pageX - offset.left;
            const y = e.pageY - offset.top;
            const width = $image.width();
            const height = $image.height();

            // ✅ IMPROVED: Boundary checks
            if (x < 0 || y < 0 || x > width || y > height) {
                $zoomLens.hide();
                $zoomContainer.hide();
                return;
            }

            $zoomLens.css({
                left: x - 50,
                top: y - 50,
                display: 'block'
            });

            $zoomContainer.css({
                display: 'block',
                backgroundImage: `url(${$image.attr('src')})`,
                backgroundPosition: `${(x / width) * 100}% ${(y / height) * 100}%`,
                backgroundSize: `${width * 2}px ${height * 2}px`
            });
        });

        $image.on('mouseleave.zoom', function () {
            $zoomLens.hide();
            $zoomContainer.hide();
        });

        console.log('Zoom setup completed for:', $image.attr('src'));
    }

    document.addEventListener('DOMContentLoaded', function () {
        // ✅ IMPROVED: Handle mobile thumbnail switching with better zoom setup
        const mobileThumbs = document.querySelectorAll('.product-thumb');
        mobileThumbs.forEach(thumb => {
            thumb.addEventListener('click', function () {
                console.log('Mobile thumb clicked:', this.getAttribute('data-target'));

                mobileThumbs.forEach(t => t.classList.remove('active'));
                this.classList.add('active');

                const targetTab = this.getAttribute('data-target');
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('active', 'show');
                });

                const targetPane = document.querySelector(targetTab);
                if (targetPane) {
                    targetPane.classList.add('active', 'show');

                    // ✅ IMPROVED: Reapply zoom with delay to ensure image is loaded
                    setTimeout(function () {
                        const $img = $(targetPane).find('img');
                        if ($img.length) {
                            console.log('Mobile - Setting up zoom for:', $img.attr('src'));
                            setupZoom($img);
                        }
                    }, 100);
                }
            });
        });

        // ✅ Mobile pinch zoom logic
        const productImages = document.querySelectorAll('.product__details__pic__item img');
        if (window.innerWidth <= 767) {
            productImages.forEach(img => {
                let prevDist = null;
                let scale = 1;

                img.addEventListener('touchstart', function (e) {
                    if (e.touches.length === 2) {
                        const dx = e.touches[0].pageX - e.touches[1].pageX;
                        const dy = e.touches[0].pageY - e.touches[1].pageY;
                        prevDist = Math.hypot(dx, dy);
                    }
                });

                img.addEventListener('touchmove', function (e) {
                    if (e.touches.length === 2 && prevDist !== null) {
                        e.preventDefault();
                        const dx = e.touches[0].pageX - e.touches[1].pageX;
                        const dy = e.touches[0].pageY - e.touches[1].pageY;
                        const dist = Math.hypot(dx, dy);

                        scale = Math.min(Math.max(1, dist / prevDist), 3);
                        img.style.transform = `scale(${scale})`;
                    }
                });

                img.addEventListener('touchend', function () {
                    setTimeout(() => {
                        img.style.transform = 'scale(1)';
                        scale = 1;
                        prevDist = null;
                    }, 300);
                });
            });
        }
    });

    // ✅ FIXED: Desktop zoom setup with proper event handling
    $(document).ready(function () {
        $('<div class="image-zoom-container"></div>').appendTo('body');

        // Setup zoom for initially active image
        $('.tab-pane.active img').each(function () {
            setupZoom($(this));
        });

        // ✅ FIX: Handle Bootstrap tab switching (desktop thumbnails)
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            console.log('Tab switched:', e.target.getAttribute('href'));

            // Small delay to ensure tab content is fully loaded
            setTimeout(function () {
                const targetHref = e.target.getAttribute('href');
                const $activeImage = $(targetHref).find('img');

                if ($activeImage.length) {
                    console.log('Setting up zoom for:', $activeImage.attr('src'));
                    setupZoom($activeImage);
                }
            }, 100);
        });

        // ✅ FIX: Handle direct tab clicks (alternative approach)
        $('.nav-link[data-toggle="tab"]').on('click', function (e) {
            const targetHref = $(this).attr('href');

            // Delay to ensure tab switch completes
            setTimeout(function () {
                const $activeImage = $(targetHref).find('img');
                if ($activeImage.length) {
                    console.log('Click - Setting up zoom for:', $activeImage.attr('src'));
                    setupZoom($activeImage);
                }
            }, 150);
        });

        // ✅ FIX: Fallback - setup zoom for all images on load
        $('.product__details__pic__item img').each(function () {
            const $img = $(this);
            // Only setup zoom if the image is in an active tab or if it becomes active
            if ($img.closest('.tab-pane').hasClass('active')) {
                setupZoom($img);
            }
        });
    });




    async function addToCart(productId, productQty,buttonElement) {
        console.log('Called addToCart with:', productId, productQty);
        try {
            const quantity = parseInt(document.getElementById(`product-quantity-${productId}`).value);

            if (quantity > productQty) {
                Swal.fire(
                    'Error!',
                    `You cannot order more than ${productQty} items.`,
                    'error'
                );
                return;
            }

            const response = await fetch('/addToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: quantity
                })
            });

            const data = await response.json();

            if (data.success) {
                // Update cart badge
                updateCartBadge();

                 if (buttonElement) {
                buttonElement.textContent = 'Added to Cart';
                buttonElement.classList.add('added');
                buttonElement.disabled = true;
            }

                Toastify({
                    text: "Success\nProduct added to cart successfully",
                    duration: 2000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    stopOnFocus: true,
                    style: {
                        background: "#ffffff",
                        color: "#28a745",
                        boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                        padding: "12px 20px",
                        borderRadius: "10px",
                        borderLeft: "5px solid #28a745",
                        fontSize: "14px",
                        fontWeight: "bold",
                        textAlign: "left",
                        animation: "fadeInUp 0.5s ease-in-out"
                    },
                    avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
                }).showToast();

            } else {
                throw new Error(data.message || 'Failed to add product to cart');
            }

        } catch (error) {
            console.error('Error:', error);

            Toastify({
                text: "Error\n" + (error.message || 'Failed to add product to cart'),
                duration: 2000,
                close: true,
                gravity: "top",
                position: "right",
                stopOnFocus: true,
                style: {
                    background: "#ffffff",
                    color: "#dc3545",
                    boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                    padding: "12px 20px",
                    borderRadius: "10px",
                    borderLeft: "5px solid #dc3545",
                    fontSize: "14px",
                    fontWeight: "bold",
                    textAlign: "left",
                    animation: "fadeInUp 0.5s ease-in-out"
                },
                avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
            }).showToast();
        }
    }


    function updateQuantity(action, productId) {
        const quantityInput = document.getElementById(`product-quantity-${productId}`);
        let currentQuantity = parseInt(quantityInput.value);

        if (action === 'increase' && currentQuantity < 5) { quantityInput.value = currentQuantity + 1; } else if
            (action === 'decrease' && currentQuantity > 1) {
            quantityInput.value = currentQuantity - 1;
        } else if (action === 'increase' && currentQuantity >= 5) {
            Toastify({
                text: "Error\nYou can only order up to 5 items",
                duration: 2000,
                close: true,
                gravity: "top",
                position: "right",
                stopOnFocus: true,
                style: {
                    background: "#ffffff",
                    color: "#dc3545",
                    boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                    padding: "12px 20px",
                    borderRadius: "10px",
                    borderLeft: "5px solid #dc3545",
                    fontSize: "14px",
                    fontWeight: "bold",
                    textAlign: "left",
                    animation: "fadeInUp 0.5s ease-in-out"
                },
                avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
            }).showToast();
        }
    }



    async function toggleWishlist(productId, element) {
        try {
            const response = await fetch("/addToWishlist", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId })
            });

            const badge = document.getElementById("wishlist-count-badge");

            const data = await response.json();

            if (data.success) {
                // Add to wishlist success
                element.classList.add('in-wishlist');
                element.innerHTML = '<i class="fa fa-heart"></i> Wishlisted';
                updateWishlistBadge(badge, data.count);

                Toastify({
                    text: "Success\nProduct added to wishlist successfully",
                    duration: 2000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    stopOnFocus: true,
                    style: {
                        background: "#ffffff",
                        color: "#28a745",
                        boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                        padding: "12px 20px",
                        borderRadius: "10px",
                        borderLeft: "5px solid #28a745",
                        fontSize: "14px",
                        fontWeight: "bold",
                        textAlign: "left",
                        animation: "fadeInUp 0.5s ease-in-out"
                    },
                    avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
                }).showToast();
            } else {
                // Check if item is already in cart
                if (data.message === "Item is already in the cart") {
                    Toastify({
                        text: "Info\n" + data.message,
                        duration: 2000,
                        close: true,
                        gravity: "top",
                        position: "right",
                        stopOnFocus: true,
                        style: {
                            background: "#ffffff",
                            color: "#17a2b8",
                            boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                            padding: "12px 20px",
                            borderRadius: "10px",
                            borderLeft: "5px solid #17a2b8",
                            fontSize: "14px",
                            fontWeight: "bold",
                            textAlign: "left",
                            animation: "fadeInUp 0.5s ease-in-out"
                        },
                        avatar: "https://cdn-icons-png.flaticon.com/512/5753/5753454.png",
                    }).showToast();
                } else {
                    // Item already in wishlist, so remove it
                    const removeResponse = await fetch(`/removeFromWishlist/${productId}`, {
                        method: "DELETE"
                    });

                    const removeData = await removeResponse.json();

                    if (removeData.success) {
                        // Remove from wishlist success
                        element.classList.remove('in-wishlist');
                        element.innerHTML = '<i class="fa fa-heart"></i> Add to wishlist';
                        updateWishlistBadge(badge, removeData.count);

                        Toastify({
                            text: "Success\nProduct removed from wishlist",
                            duration: 2000,
                            close: true,
                            gravity: "top",
                            position: "right",
                            stopOnFocus: true,
                            style: {
                                background: "#ffffff",
                                color: "#28a745",
                                boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                                padding: "12px 20px",
                                borderRadius: "10px",
                                borderLeft: "5px solid #28a745",
                                fontSize: "14px",
                                fontWeight: "bold",
                                textAlign: "left",
                                animation: "fadeInUp 0.5s ease-in-out"
                            },
                            avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
                        }).showToast();
                    } else {
                        throw new Error(removeData.message || 'Failed to remove product from Wishlist');
                    }
                }
            }
        } catch (error) {
            console.error('Error:', error);

            Toastify({
                text: "Error\n" + (error.message || 'Failed to update wishlist'),
                duration: 2000,
                close: true,
                gravity: "top",
                position: "right",
                stopOnFocus: true,
                style: {
                    background: "#ffffff",
                    color: "#dc3545",
                    boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
                    padding: "12px 20px",
                    borderRadius: "10px",
                    borderLeft: "5px solid #dc3545",
                    fontSize: "14px",
                    fontWeight: "bold",
                    textAlign: "left",
                    animation: "fadeInUp 0.5s ease-in-out"
                },
                avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
            }).showToast();
        }
    }

    function updateWishlistBadge(badgeElement, count) {
        if (!badgeElement) return;

        if (count > 0) {
            badgeElement.textContent = count;
            badgeElement.style.display = "inline-block";
        } else {
            badgeElement.style.display = "none";
        }
    }

</script>