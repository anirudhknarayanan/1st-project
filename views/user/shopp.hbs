<style>
/* Out of stock product styles */
.product-entry.out-of-stock {
	position: relative;
	opacity: 0.8;
}

.stock-overlay {
	position: absolute;
	top: 10px;
	right: 10px;
	z-index: 10;
}

.out-of-stock-badge {
	background-color: #dc3545;
	color: white;
	padding: 4px 8px;
	border-radius: 12px;
	font-size: 10px;
	font-weight: bold;
	text-transform: uppercase;
	letter-spacing: 0.5px;
}

.stock-status {
	margin: 8px 0;
	font-size: 14px;
	font-weight: 500;
}

.in-stock {
	color: #28a745;
	font-weight: 600;
}

.out-of-stock-text {
	color: #dc3545;
	font-weight: 600;
}

.add-to-cart-btn:disabled {
	cursor: not-allowed;
	opacity: 0.6;
}

.product-entry.out-of-stock .prod-img img {
	filter: grayscale(30%);
}

/* Wishlist button styles */
.wishlist-btn {
	color: #6c757d;
	text-decoration: none;
	font-size: 14px;
	transition: all 0.3s ease;
}

.wishlist-btn:hover {
	color: #dc3545;
}

.wishlist-btn.in-wishlist {
	color: #dc3545;
}

.wishlist-btn.in-wishlist:hover {
	color: #dc3545;
}
</style>

<div class="colorlib-loader"></div>

<div id="page">


	{{!-- <div class="breadcrumbs">
		<div class="container">
			<div class="row">
				<div class="col">
					<p><span>Men</span></p>
				</div>
			</div>
		</div>
	</div> --}}

	<div class="breadcrumbs-two">
		<div class="container">
			<div class="row">
				<div class="col">
					<div class="breadcrumbs-img" style="background-image: url(images/img_bg_3.jpg)">
						<h2 class="text-white">SHOP</h2>
					</div>
					<div class="menu text-center">
						<p><a href="#">New Arrivals</a> <a href="#">Best Sellers</a> <a href="#">Extended Widths</a> <a
								href="#">Sale</a></p>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="colorlib-featured">
		<div class="container">
			<div class="row">

				<!-- For Men -->
				<div class="col-sm-4 text-center">
					<div class="featured">
						<div class="featured-img featured-img-2" style="background-image: url(images/men.jpg);">
							<h2>For Men</h2>
							{{#each category}}
							{{#ifEquals this.name "MEN"}}
							<p><a href="/filter?category={{this._id}}" class="btn btn-primary btn-lg">Shop now</a></p>
							{{/ifEquals}}
							{{/each}}
						</div>
					</div>
				</div>

				<!-- For Dress -->
				<div class="col-sm-4 text-center">
					<div class="featured">
						<div class="featured-img featured-img-2" style="background-image: url(images/men-2.jpg);">
							<h2>Take Your Time</h2>


							<p><a href="" class="btn btn-primary btn-lg">Shop now</a></p>


						</div>
					</div>
				</div>

				<!-- For Women -->
				<div class="col-sm-4 text-center">
					<div class="featured">
						<div class="featured-img featured-img-2" style="background-image: url(images/women.jpg);">
							<h2>For Womens</h2>
							{{#each category}}
							{{#ifEquals this.name "WOMEN"}}
							<p><a href="/filter?category={{this._id}}" class="btn btn-primary btn-lg">Shop now</a></p>
							{{/ifEquals}}
							{{/each}}
						</div>
					</div>
				</div>

			</div>
		</div>
	</div>

	<div class="container">
		<div class="row">
			
			<div class="search-container">
				<form action="/search" method="post" class="w-100">
					<div class="input-group">
						<input type="text" style="padding-left: 68px;" class="form-control"
							placeholder="Search products" name="query" value="">
						<button class="searchbtn" type="submit">Search</button>
					</div>
				</form>
			</div>

		</div>
	</div>

	<div class="colorlib-product">

		<div class="container">

			<div class="row">

				<div class="col-lg-3 col-xl-3">
					<div class="row">
						<div class="col-sm-12">

							<div class="side border mb-1">
								<h3>Brand</h3>
								<ul>
									{{#each brand}}
									<li><a href="/filter?brand={{this._id}}">{{this.brandName}}</a></li>
									{{/each}}
								</ul>
							</div>

						</div>

						<div class="col-sm-12">
							<div class="side border mb-1">
								<h3>Filter By Price</h3>
								<ul>
									<li><a href="/filterPrice?gt=0&lt=5000">under ‚Çπ5000</a></li>
									<li><a href="/filterPrice?gt=5000&lt=10000">‚Çπ5000 - ‚Çπ10000</a></li>
									<li><a href="/filterPrice?gt=10000&lt=20000">‚Çπ10000 - ‚Çπ20000</a></li>
									<li><a href="/filterPrice?gt=20000&lt=30000">‚Çπ20000 - ‚Çπ30000</a></li>
									<li><a href="/filterPrice?gt=30000&lt=50000">‚Çπ30000 - ‚Çπ50000</a></li>
								</ul>
							</div>
						</div>

						<div class="col-sm-12">
							<div class="side border mb-1">
								<h3>Categories</h3>
								<ul>
									{{#each category}}
									<li><a href="/filter?category={{this._id}}">{{this.name}}</a></li>
									{{/each}}
								</ul>
							</div>
						</div>

					</div>
				</div>

				<div class="col-lg-9 col-xl-9">
					<div class="row row-pb-md">
						{{#each products}}
						<div class="col-lg-4 mb-4 text-center">
							<div class="product-entry border {{#unless quantity}}out-of-stock{{/unless}}">
								{{!-- Stock status overlay --}}
								{{#unless quantity}}
								<div class="stock-overlay">
									<span class="out-of-stock-badge">OUT OF STOCK</span>
								</div>
								{{/unless}}
								
								<a href="/productDetails?id={{this._id}}" class="prod-img">
									<img src="/uploads/product-images/{{productImage.[0]}}" class="img-fluid"
										alt="{{productName}}" {{#unless quantity}}style="opacity: 0.6;"{{/unless}}>
								</a>
								<div class="desc">
									<h2><a href="#">{{productName}}</a></h2>
									<p>{{brand}}</p>

									{{!-- Stock status indicator --}}
									<div class="stock-status">
										{{#if quantity}}
										<span class="in-stock">‚úÖ In Stock ({{quantity}} available)</span>
										{{else}}
										<span class="out-of-stock-text">‚ùå Out of Stock</span>
										{{/if}}
									</div>

									{{!-- ‚úÖ SHOW OFFER INFORMATION --}}
									{{#if hasOffer}}
									<div class="offer-badge" style="background: linear-gradient(45deg, #361414, #1fe962); color: white; padding: 4px 8px; border-radius: 12px; font-size: 12px; font-weight: bold; margin-bottom: 8px; display: inline-block;">
										{{#if (eq appliedOfferType 'product')}}
											üè∑Ô∏è Product Offer: {{appliedOffer}}% OFF
										{{else if (eq appliedOfferType 'category')}}
											üìÇ Category Offer: {{appliedOffer}}% OFF
										{{/if}}
									</div>
									{{/if}}

									<p>
										Price: {{formatINR salePrice}}
										{{#if hasOffer}}
										<span class="text-muted"><strike>{{formatINR regularPrice}}</strike></span>
										{{/if}}
									</p>
									
									{{!-- Add to Cart Button with stock check --}}
									{{#if quantity}}
										{{#if isInCart}}
											<button class="add-to-cart-btn btn-success" disabled onclick="addToCart('{{this._id}}', this)">Added to Cart</button>
										{{else}}
											<button class="add-to-cart-btn btn-dark" onclick="addToCart('{{this._id}}', this)">Add To Cart</button>
										{{/if}}
									{{else}}
										<button class="add-to-cart-btn btn-secondary" disabled>Out of Stock</button>
									{{/if}}
								</div>
								<div class="text-center" style="margin-bottom: 15px;">
									<a href="#" onclick="event.preventDefault(); toggleWishlist('{{this._id}}', this)"
										class="wishlist-btn {{#if (isInWishlist this._id ../wishlistProductIds)}}in-wishlist{{/if}}">
										<i class="fa fa-heart"></i> {{#if (isInWishlist this._id ../wishlistProductIds)}}Wishlisted{{else}}Add to wishlist{{/if}}
									</a>
								</div>

							</div>
						</div>
						{{/each}}

					</div>
					<div class="row">
						<div class="col-md-12 text-center">


							{{!-- ‚úÖ Previous Button --}}
							{{#if (gt currentPage 1)}}
							<a href="?page={{subtract currentPage 1}}{{#if searchTerm}}&search={{searchTerm}}{{/if}}"
								class="btn btn-outline-primary">Previous</a>
							{{/if}}

							{{!-- ‚úÖ Page Numbers --}}
							{{#each (range 1 totalPages)}}
							<a href="?page={{this}}{{#if ../searchTerm}}&search={{../searchTerm}}{{/if}}"
								class="btn {{#if (eq this ../currentPage)}}btn-primary{{else}}btn-outline-primary{{/if}}">
								{{this}}
							</a>
							{{/each}}

							{{!-- ‚úÖ Next Button --}}
							{{#if (lt currentPage totalPages)}}
							<a href="?page={{add currentPage 1}}{{#if searchTerm}}&search={{searchTerm}}{{/if}}"
								class="btn btn-outline-primary">Next</a>
							{{/if}}


						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="colorlib-partner">
	<div class="container">
		<div class="row">
			<div class="col-sm-8 offset-sm-2 text-center colorlib-heading colorlib-heading-sm">
				<h2>Trusted Partners</h2>
			</div>
		</div>
		<div class="row">
			<div class="col partner-col text-center">
				<img src="images/brand-1.png" class="img-fluid" alt="Free html4 bootstrap 4 template">
			</div>
			<div class="col partner-col text-center">
				<img src="images/brand-2.png" class="img-fluid" alt="Free html4 bootstrap 4 template">
			</div>
			<div class="col partner-col text-center">
				<img src="images/brand-3.png" class="img-fluid" alt="Free html4 bootstrap 4 template">
			</div>
			<div class="col partner-col text-center">
				<img src="images/brand-4.jpg" class="img-fluid" alt="Free html4 bootstrap 4 template">
			</div>
			<div class="col partner-col text-center">
				<img src="images/brand-5.png" class="img-fluid" alt="Free html4 bootstrap 4 template">
			</div>
		</div>
	</div>
</div>


</div>

<script>
	async function addToCart(productId, buttonElement) {
		try {
			const response = await fetch('/addToCart', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					productId: productId,
					quantity: 1
				})
			});
			const data = await response.json();
			if (data.success) {
				// Change button text to "Added to Cart" and disable it
				if (buttonElement) {
					buttonElement.textContent = "Added to Cart";
					buttonElement.disabled = true;
					buttonElement.classList.remove("btn-dark");
					buttonElement.classList.add("btn-success");
				}

				// Update cart badge
				updateCartBadge();

				Toastify({
					text: "Success\nProduct added to cart ",
					duration: 2000,
					close: true,
					gravity: "top",
					position: "right",
					stopOnFocus: true,
					style: {
						background: "#ffffff",
						color: "#28a745",
						boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
						padding: "12px 20px",
						borderRadius: "10px",
						borderLeft: "5px solid #28a745",
						fontSize: "14px",
						fontWeight: "bold",
						textAlign: "left",
						animation: "fadeInUp 0.5s ease-in-out"
					},
					avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
				}).showToast();
			} else {
				Toastify({
					text: "Error\n" + (data.message || 'Failed to add product to cart'),
					duration: 2000,
					close: true,
					gravity: "top",
					position: "right",
					stopOnFocus: true,
					style: {
						background: "#ffffff",
						color: "#dc3545",
						boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
						padding: "12px 20px",
						borderRadius: "10px",
						borderLeft: "5px solid #dc3545",
						fontSize: "14px",
						fontWeight: "bold",
						textAlign: "left",
						animation: "fadeInUp 0.5s ease-in-out"
					},
					avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
				}).showToast();
			}

		} catch (error) {
			Toastify({
				text: "Error\n" + (error.message || 'Failed to add product to cart'),
				duration: 2000,
				close: true,
				gravity: "top",
				position: "right",
				stopOnFocus: true,
				style: {
					background: "#ffffff",
					color: "#dc3545",
					boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
					padding: "12px 20px",
					borderRadius: "10px",
					borderLeft: "5px solid #dc3545",
					fontSize: "14px",
					fontWeight: "bold",
					textAlign: "left",
					animation: "fadeInUp 0.5s ease-in-out"
				},
				avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
			}).showToast();

		}
	}


	async function addToWishlist(productId) {
		try {
			const response = await fetch("/addToWishlist", {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify({ productId })
			});

			const data = await response.json();

			if (data.success) {
				Toastify({
					text: "Success\nProduct added to wishlist successfully",
					duration: 2000,
					close: true,
					gravity: "top",
					position: "right",
					stopOnFocus: true,
					style: {
						background: "#ffffff",
						color: "#28a745",
						boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
						padding: "12px 20px",
						borderRadius: "10px",
						borderLeft: "5px solid #28a745",
						fontSize: "14px",
						fontWeight: "bold",
						textAlign: "left",
						animation: "fadeInUp 0.5s ease-in-out"
					},
					avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
				}).showToast();
			} else {
				throw new Error(data.message || 'Failed to add product to Wishlist');
			}
		} catch (error) {
			console.error('Error:', error);

			Toastify({
				text: "Error\n" + (error.message || 'Failed to add product to Wishlist'),
				duration: 2000,
				close: true,
				gravity: "top",
				position: "right",
				stopOnFocus: true,
				style: {
					background: "#ffffff",
					color: "#dc3545",
					boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
					padding: "12px 20px",
					borderRadius: "10px",
					borderLeft: "5px solid #dc3545",
					fontSize: "14px",
					fontWeight: "bold",
					textAlign: "left",
					animation: "fadeInUp 0.5s ease-in-out"
				},
				avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
			}).showToast();
		}
	}

	async function toggleWishlist(productId, element) {
		try {
			const response = await fetch("/addToWishlist", {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify({ productId })
			});

			const data = await response.json();

			if (data.success) {
				// Add to wishlist success
				element.classList.add('in-wishlist');
				element.innerHTML = '<i class="fa fa-heart"></i> Wishlisted';
				
				Toastify({
					text: "Success\nProduct added to wishlist successfully",
					duration: 2000,
					close: true,
					gravity: "top",
					position: "right",
					stopOnFocus: true,
					style: {
						background: "#ffffff",
						color: "#28a745",
						boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
						padding: "12px 20px",
						borderRadius: "10px",
						borderLeft: "5px solid #28a745",
						fontSize: "14px",
						fontWeight: "bold",
						textAlign: "left",
						animation: "fadeInUp 0.5s ease-in-out"
					},
					avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
				}).showToast();
			} else {
				// Check if item is already in cart
				if (data.message === "Item is already in the cart") {
					Toastify({
						text: "Info\n" + data.message,
						duration: 2000,
						close: true,
						gravity: "top",
						position: "right",
						stopOnFocus: true,
						style: {
							background: "#ffffff",
							color: "#17a2b8",
							boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
							padding: "12px 20px",
							borderRadius: "10px",
							borderLeft: "5px solid #17a2b8",
							fontSize: "14px",
							fontWeight: "bold",
							textAlign: "left",
							animation: "fadeInUp 0.5s ease-in-out"
						},
						avatar: "https://cdn-icons-png.flaticon.com/512/5753/5753454.png",
					}).showToast();
				} else {
					// Item already in wishlist, so remove it
					const removeResponse = await fetch(`/removeFromWishlist/${productId}`, {
						method: "DELETE"
					});
					
					const removeData = await removeResponse.json();
					
					if (removeData.success) {
						// Remove from wishlist success
						element.classList.remove('in-wishlist');
						element.innerHTML = '<i class="fa fa-heart"></i> Add to wishlist';
						
						Toastify({
							text: "Success\nProduct removed from wishlist",
							duration: 2000,
							close: true,
							gravity: "top",
							position: "right",
							stopOnFocus: true,
							style: {
								background: "#ffffff",
								color: "#28a745",
								boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
								padding: "12px 20px",
								borderRadius: "10px",
								borderLeft: "5px solid #28a745",
								fontSize: "14px",
								fontWeight: "bold",
								textAlign: "left",
								animation: "fadeInUp 0.5s ease-in-out"
							},
							avatar: "https://cdn-icons-png.flaticon.com/512/845/845646.png",
						}).showToast();
					} else {
						throw new Error(removeData.message || 'Failed to remove product from Wishlist');
					}
				}
			}
		} catch (error) {
			console.error('Error:', error);

			Toastify({
				text: "Error\n" + (error.message || 'Failed to update wishlist'),
				duration: 2000,
				close: true,
				gravity: "top",
				position: "right",
				stopOnFocus: true,
				style: {
					background: "#ffffff",
					color: "#dc3545",
					boxShadow: "0px 5px 15px rgba(0, 0, 0, 0.2)",
					padding: "12px 20px",
					borderRadius: "10px",
					borderLeft: "5px solid #dc3545",
					fontSize: "14px",
					fontWeight: "bold",
					textAlign: "left",
					animation: "fadeInUp 0.5s ease-in-out"
				},
				avatar: "https://cdn-icons-png.flaticon.com/512/190/190406.png",
			}).showToast();
		}
	}

</script>