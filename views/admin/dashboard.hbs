<style>

  * {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
  .brand {
   font-size: 2.5rem;
   font-weight: bold;
   color: #989898;
   margin-left: 66px;
}

.header-right {
   display: flex;
   align-items: center;
   gap: 1.5rem;
}

.notification-icon {
   position: relative;
   color: #4b5563;
   cursor: pointer;
   font-size: 1.2rem;
}

.notification-badge {
   position: absolute;
   top: -5px;
   right: -5px;
   background: var(--danger-color);
   color: white;
   border-radius: 50%;
   width: 18px;
   height: 18px;
   font-size: 0.7rem;
   display: flex;
   align-items: center;
   justify-content: center;
}

.profile-dropdown {
   position: relative;
}

.profile-img {
   width: 41px;
   height: 40px;
   border-radius: 50%;
   background: #000000;
   display: flex;
   align-items: center;
   justify-content: center;
   cursor: pointer;
   color: #ffffff;
}

.dropdown-menu {
   position: absolute;
   top: 120%;
   right: 0;
   background: white;
   border-radius: 8px;
   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
   padding: 0.5rem 0;
   min-width: 180px;
   display: none;
   z-index: 200;
}

.dropdown-menu.show {
   display: block;
}

.dropdown-item {
   padding: 0.75rem 1rem;
   color: #4b5563;
   text-decoration: none;
   display: flex;
   align-items: center;
   gap: 10px;
}

.dropdown-item:hover {
   background: #f3f4f6;
   color: var(--primary-color);
}

/* Breadcrumbs */
.breadcrumbs {
   margin-bottom: 20px;
   font-size: 14px;
   color: #6c757d;
}

.breadcrumbs span {
   margin: 0 0.5rem;
}

/* Main Content */
.main-content {
   padding: 20px;
   background-color: #f4f6f9;
}

.dashboard-grid {
   display: grid;
   grid-template-columns: repeat(3, 1fr);
   gap: 1.5rem;
   margin-bottom: 2rem;
}

.summary-cards {
   display: grid;
   grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
   gap: 1.5rem;
   margin-bottom: 1.5rem;
   margin-top: 48px;
}

.card, .summary-card {
   background: white;
   border-radius: 12px;
   padding: 1.5rem;
   box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.card-title {
   font-size: 23px;
   color: #1f2937;
   font-weight: 600;
   margin-bottom: 16px;
   text-align: center;
}

/* Table Styles */
.table {
   width: 100%;
   border-collapse: collapse;
}

.table th, .table td {
   padding: 1rem;
   text-align: left;
   border-bottom: 1px solid #e5e7eb;
}

.table th {
   background: #f9fafb;
   font-weight: 600;
   color: #4b5563;
}

.status {
   padding: 0.25rem 0.75rem;
   border-radius: 20px;
   font-size: 0.875rem;
   font-weight: 500;
   text-transform: capitalize;
}

.status.completed { 
   background: rgba(46, 204, 113, 0.1); 
   color: #27ae60; 
}

.status.pending { 
   background: rgba(241, 196, 15, 0.1); 
   color: #f39c12; 
}

.status.processing { 
   background: rgba(52, 152, 219, 0.1); 
   color: #3498db; 
}

.status.shipped { 
   background: rgba(155, 89, 182, 0.1); 
   color: #9b59b6; 
}

.status.delivered { 
   background: rgba(46, 204, 113, 0.1); 
   color: #2ecc71; 
}

.status.cancelled { 
   background: rgba(231, 76, 60, 0.1); 
   color: #e74c3c; 
}

/* Additional Dashboard Styling */
.summary-card {
   background: linear-gradient(-2deg, #000000, #17af31);
   border-radius: 15px;
   padding: 1.5rem;
   box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
   display: flex;
   align-items: center;
   justify-content: space-between;
   transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
   color: white;
   position: relative;
   overflow: hidden;
}

/* 3D Glow Effect */
.summary-card {
background: linear-gradient(to bottom, #7ccdc4, #2b2626);

   border-radius: 15px;
   padding: 1.5rem;
   box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
   display: flex;
   align-items: center;
   justify-content: space-between;
   transition: transform 0.4s ease-out, box-shadow 0.4s ease-out, background 0.4s ease-out;
   color: white;
   position: relative;
   overflow: hidden;
   perspective: 1000px; /* Adds slight 3D depth without tilt */
}

/* 3D Glow Effect */
.summary-card::before {
   content: "";
   position: absolute;
   top: -50%;
   left: -50%;
   width: 200%;
   height: 200%;
   background: radial-gradient(circle, rgba(0, 0, 0, 0.2) 0%, transparent 50%);
   transform: rotate(25deg);
   transition: all 0.5s ease-in-out;
   opacity: 0;
}

/* âœ¨ Premium Hover Effect */
.summary-card:hover {
   transform: translateY(-10px) scale(1.1); /* Zoom effect without slanting */
   box-shadow: 0 20px 50px rgba(0, 0, 0, 0.6); /* Richer golden glow */
   background: linear-gradient(120deg, #7ccdc4, #000000);
}

/* Glow effect appears on hover */
.summary-card:hover::before {
   opacity: 1;
   top: -20%;
   left: -20%;
}



.summary-icon {
   font-size: 2rem;
   display: flex;
   align-items: center;
   justify-content: center;
   width: 60px;
   height: 60px;
   background: rgba(255, 255, 255, 0.2);
   border-radius: 50%;
}
.summary-info{
   margin-right: 50px;

}

.summary-info h3 {
   font-size: 1.8rem;
   font-weight: bold;
   margin: 0;
}

.summary-info p {
   font-size: 1rem;
   opacity: 0.8;
}

.summary-change {
   font-size: 1rem;
   display: flex;
   align-items: center;
   gap: 5px;
   padding: 5px 12px;
   border-radius: 20px;
   font-weight: bold;
   background: rgba(255, 255, 255, 0.2);
}

.summary-change.increase {
   color: #27ae60;
   background: rgba(39, 174, 96, 0.2);
}

.summary-change.decrease {
   color: #e74c3c;
   background: rgba(231, 76, 60, 0.2);
}

.summary-change i {
   font-size: 1.2rem;
}


.chart-filter {
   position: relative;
}

.chart-select {
   appearance: none;
   padding: 0.5rem 2rem 0.5rem 1rem;
   border: 1px solid #e5e7eb;
   border-radius: 6px;
   background: white;
   color: #4b5563;
   font-size: 0.9rem;
   cursor: pointer;
   transition: all 0.3s ease;
}

.chart-select:focus {
   outline: none;
   border-color: var(--primary-color);
   box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.chart-filter::after {
   content: '\f078';
   font-family: 'Font Awesome 5 Free';
   font-weight: 900;
   position: absolute;
   right: 10px;
   top: 50%;
   transform: translateY(-50%);
   pointer-events: none;
   color: #6b7280;
}

.chart-container {
   height: 300px;
   position: relative;
}

.view-all-btn {
   
   background-color: rgba(0, 0, 0, 0.1);
   /* color: var(--primary-color); */
   color:black;
   border-radius: 6px;
   text-decoration: none;
   font-size: 0.9rem;
   font-weight: 500;
   transition: all 0.3sease;
   width: 73px;
   height: 34px;
   padding: 8px; 
   
}

.view-all-btn:hover {
   background: rgba(59, 130, 246, 0.2);
}

.order-link {
   color:black;
   text-decoration:none;
   font-weight: 500;
   transition: color 0.3s ease;
}



/* Responsive Adjustments */
@media (max-width: 1200px) {
   .dashboard-grid {
       grid-template-columns: repeat(2, 1fr);
   }
}

@media (max-width: 768px) {
   .dashboard-grid {
       grid-template-columns: 1fr;
   }
}
.chart-container {
   background-color: #ffffff;
   border-radius: 8px;
   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
   padding: 15px;
   margin-bottom: 20px;
}

.chart-header {
   display: flex;
   justify-content: space-between;
   align-items: center;
   margin-bottom: 15px;
}

/* Container for proper alignment */
.chart-filter-container {
   display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 9px;
    padding: 20px;
    background: linear-gradient(135deg, #dfdfdf, #bac8e0);
    border: 1px solid #aaa;
    border-radius: 8px;
    max-width: 318px;
    margin: 0 auto;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    height: 99px;
    width: 228px;
    margin-right: 33px;
}

/* Label styling */
.chart-label {
   font-size: 18px;
   font-weight: bold;
   color: #403e3e;
   text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
}

/* Dropdown Select */
.chart-select {
   width: 72%;
    padding: 10px 30px;
    border: 2px solid #fff;
    border-radius: 8px;
    font-size: 16px;
    font-weight: bold;
    background: rgba(255, 255, 255, 0.9);
    color: #333;
    cursor: pointer;
    transition: all 0.3sease;
    outline: none;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);

}

/* Hover & Focus Effects */
.chart-select:hover,
.chart-select:focus {
   border-color: #ff6f61;
   background: #fff;
   box-shadow: 0 0 10px rgba(255, 111, 97, 0.5);
}

/* Dropdown Arrow Customization */
.chart-select {
   appearance: none;
   background-image: url('data:image/svg+xml;charset=US-ASCII,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4 5"><path fill="black" d="M2 0L0 2h4z"/></svg>');
   background-repeat: no-repeat;
   background-position: right 10px center;
   background-size: 12px;
}

/* Mobile Optimization */
@media (max-width: 500px) {
   .chart-filter-container {
       max-width: 100%;
       padding: 15px;
   }

   .chart-select {
       font-size: 14px;
       padding: 10px;
   }
}
.category-card {
   width: 100%;
   margin: auto;
   margin-top: 10px;
}
.dashboard-container {
   display: flex;
   flex-direction: column;
   gap: 20px; /* Adds space between cards */
   max-width: 800px; /* Adjust width to look good */
   margin: auto; /* Centers content */
}
.product-image {
   width: 50px;
   height: 50px;
   object-fit: cover;
   border-radius: 5px;
}
.brand-image{
   width: 50px;
   height: 50px;
   object-fit: cover;
   border-radius: 5px;
}
.dashboard-hed {
            margin-bottom: 20px;
            font-weight: bold;
            font-size: 33px;
            color: #fff;
            text-align: justify;
            /* text-transform: uppercase; */
            background: linear-gradient(45deg, #251a1a, #fc913a);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: 3px;
            text-shadow: 3px 3px 10px rgba(191, 190, 190, 0.4);
            animation: glowText 1.5s infinite alternate ease-in-out;    
        }

        @keyframes glowText {
            from {
                text-shadow: 3px 3px 10px rgba(191, 190, 190, 0.4);
            }
            to {
                text-shadow: 5px 5px 20px rgba(191, 190, 190, 0.8);
            }
        } 
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-7/qE78w8hXU6rPaKc+CbAWhXHYlpSt2t9UgPPp1QGgXbwQ8K+3UljqGYYMm9KDMLKzAZwxAv33l3lpG8xL79xg==" crossorigin="anonymous" referrerpolicy="no-referrer" />



<main class="main-content">

  <h1 class="dashboard-hed">Dashboard</h1>

  <!-- Summary Cards -->
  <div class="summary-cards">
    <a href="/admin/salesReport" style="text-decoration: none; color: inherit;">
      <div class="summary-card">
        <div class="summary-icon">
          <i class="fa fa-chart-line" style="color: #000000;"></i>
        </div>
        <div class="summary-info">
          <h3>â‚¹{{formatNumber dashboardData.summary.totalRevenue}}</h3>
          <p>Total Revenue</p>
        </div>
      </div>
    </a>
    <a href="/admin/users" style="text-decoration: none; color: inherit;">
      <div class="summary-card">
        <div class="summary-icon">
          <i class="fa fa-users" style="color: #000000;"></i>
        </div>
        <div class="summary-info">
          <h3>{{formatNumber dashboardData.summary.totalCustomers}}</h3>
          <p>Total Customers</p>
        </div>
      </div>
    </a>
    <a href="/admin/orders" style="text-decoration: none; color: inherit;">
      <div class="summary-card">
        <div class="summary-icon">
          <i class="fas fa-shopping-cart" style="color: #000000;"></i>
        </div>
        <div class="summary-info">
          <h3>{{formatNumber dashboardData.summary.totalOrders}}</h3>
          <p>Total Orders</p>
        </div>
      </div>
    </a>
  </div>

  <!-- Filter -->
  <div class="chart-filter-container">
    <label for="salesChartFilter" class="chart-label">Select Time Filter:</label>
    <select id="salesChartFilter" class="chart-select">
      <option value="yearly">Yearly</option>
      <option value="monthly">Monthly</option>
      <option value="weekly" selected>Weekly</option>
    </select>
  </div>

  <!-- Charts -->
  <div class="dashboard-grid">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">Sales Revenue</h3>
      </div>
      <div class="chart-container">
        <canvas id="salesChart"></canvas>
      </div>
    </div>
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">Customer Growth</h3>
      </div>
      <div class="chart-container">
        <canvas id="customersChart"></canvas>
      </div>
    </div>
  </div>

  <div class="dashboard-grid">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">Orders Overview</h3>
      </div>
      <div class="chart-container">
        <canvas id="ordersChart"></canvas>
      </div>
    </div>
    <div class="card">
      <div class="card-header">
        <h3 class="card-title">Category Performance</h3>
      </div>
      <div class="chart-container">
        <canvas id="categoryChart"></canvas>
      </div>
    </div>
  </div>
<!-- Top Selling Products -->
<div class="dashboard-container">
  <div class="card" style="margin-top: 40px;">
    <div class="card-header">
      <h3 class="card-title">Top 5 Selling Products</h3>
    </div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Image</th>
            <th>Product</th>
            <th>Sold</th>
          </tr>
        </thead>
        <tbody>
          {{#each dashboardData.topSellingProducts}}
            <tr>
              <td>
                <img src="/uploads/product-images/{{this.productImages.[0]}}" alt="{{this.productName}}" class="product-image">
              </td>
              <td>{{this.productName}}</td>
              <td>{{this.totalSold}}</td>
            </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Top Selling Categories -->
  <div class="card category-card">
    <div class="card-header">
      <h3 class="card-title">Top Selling Categories</h3>
    </div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Category</th>
            <th>Sold</th>
          </tr>
        </thead>
        <tbody>
          {{#each dashboardData.topSellingCategories}}
            <tr>
              <td>{{this.name}}</td>
              <td>{{this.totalSold}}</td>
            </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>

  <!-- Top Selling Brands -->
  <div class="card brand-card">
    <div class="card-header">
      <h3 class="card-title">Top Selling Brands</h3>
    </div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Brand Logo</th>
            <th>Brand</th>
            <th>Sold</th>
          </tr>
        </thead>
        <tbody>
          {{#each dashboardData.topSellingBrands}}
            <tr>
              <td>
                <img class="brand-image" src="/uploads/brands/{{this.brandImage}}" alt="{{this.brandName}}">
              </td>
              <td>{{this.brandName}}</td>
              <td>{{this.totalSold}}</td>
            </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>
</div>


  <!-- Recent Orders -->
  <div class="card recent-orders" style="margin-top: 40px;">
    <div class="card-header">
      <div style="display: flex; justify-content: space-between; margin-bottom: 24px;">
        <h3 class="card-title">Recent Orders</h3>
        <a href="/admin/orders" class="view-all-btn">View All</a>
      </div>
    </div>
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Customer</th>
            <th>Date</th>
            <th>Amount</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody>
          {{#each dashboardData.recentOrders}}
            <tr>
              <td class="order-link">#{{this.orderId}}</td>
              <td>{{this.customer}}</td>
              <td>{{formatDate this.date}}</td>
              <td class="amount">â‚¹{{formatNumber this.amount}}</td>
              <td><span class="status {{lowercase this.status}}">{{this.status}}</span></td>
            </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>

</main>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
  // Pass dashboard data to JS
  window.dashboardData = {{{json dashboardData}}};


  document.addEventListener('DOMContentLoaded', function() {
    // Chart instances
    let salesChart, customersChart, ordersChart, categoryChart;

    const urlParams = new URLSearchParams(window.location.search);
    const initialTimeFilter = urlParams.get('timeFilter') || 'weekly';

    // Set the sales filter dropdown to the initial value
    document.getElementById('salesChartFilter').value = initialTimeFilter;
    
    // Initialize charts with the correct time filter
    initializeCharts(initialTimeFilter);
    
    // Add event listener to the sales chart filter dropdown
    document.getElementById('salesChartFilter').addEventListener('change', function() {
        const newTimeFilter = this.value;
        updateAllCharts(newTimeFilter);
    });
    
    function updateAllCharts(timeFilter) {
        console.log("time filter ", timeFilter);
        // Update URL
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('timeFilter', timeFilter);
        window.history.replaceState({}, '', currentUrl);

        console.log("currentUrl", currentUrl);
        
        // Show loading state on all charts
        const containers = document.querySelectorAll('.chart-container');
        containers.forEach(container => container.classList.add('loading'));
        
        // Fetch updated data from API
        fetch(`/admin/dashboard-data?timeFilter=${timeFilter}`)
            .then(response => response.json())
            .then(data => {
                // Update all charts with new data
                console.log("data", data);
                updateSalesChart(data.sales);
                updateCustomersChart(data.customers);
                updateOrdersChart(data.orders);
                updateCategoryChart(data.categories);
                updateSummaryCards(data.summary);
                
                // Remove loading state from all charts
                containers.forEach(container => container.classList.remove('loading'));
            })
            .catch(error => {
                console.error('Error fetching chart data:', error);
                containers.forEach(container => container.classList.remove('loading'));
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error updating chart data. Please try again.',
                    showConfirmButton: false,
                    timer: 1500
                });
            });
    }
    
    function initializeCharts(timeFilter) {
        const dashboardData = window.dashboardData;
        
        // Initialize Sales Chart
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        salesChart = new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: dashboardData.sales.labels,
                datasets: [{
                    label: 'Sales Revenue (â‚¹)',
                    data: dashboardData.sales.data,
                    borderColor: 'green',
                    backgroundColor: 'rgba(144, 238, 144, 0.5)',
                    fill: true,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'â‚¹' + value.toLocaleString();
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return 'Revenue: â‚¹' + context.parsed.y.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
        
        // Initialize Customers Chart
        const customersCtx = document.getElementById('customersChart').getContext('2d');
        customersChart = new Chart(customersCtx, {
            type: 'bar',
            data: {
                labels: dashboardData.customers.labels,
                datasets: [{
                    label: 'New Customers',
                    data: dashboardData.customers.data,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgb(54, 162, 235)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        
        // Initialize Orders Chart
        const ordersCtx = document.getElementById('ordersChart').getContext('2d');
        ordersChart = new Chart(ordersCtx, {
            type: 'bar',
            data: {
                labels: dashboardData.orders.labels,
                datasets: [{
                    label: 'Orders',
                    data: dashboardData.orders.data,
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgb(255, 99, 132)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        
        // Initialize Category Performance Chart
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        categoryChart = new Chart(categoryCtx, {
            type: 'pie',
            data: {
                labels: dashboardData.categories.labels,
                datasets: [{
                    label: 'Category Sales (â‚¹)',
                    data: dashboardData.categories.data,
                    backgroundColor: [
                        'rgba(33, 150, 243, 0.7)',  
                        'rgba(255, 193, 7, 0.7)',   
                        'rgba(76, 175, 80, 0.7)',   
                        'rgba(244, 67, 54, 0.7)',   
                        'rgba(156, 39, 176, 0.7)'   
                    ],
                    borderColor: [
                        'rgb(33, 150, 243)',
                        'rgb(255, 193, 7)',
                        'rgb(76, 175, 80)',
                        'rgb(244, 67, 54)',
                        'rgb(156, 39, 176)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const value = context.parsed;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${context.label}: â‚¹${value.toLocaleString()} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
        
        // Update summary cards with actual data
        updateSummaryCards(dashboardData.summary);
    }
    
    function updateSalesChart(salesData) {
        if (salesChart) {
            salesChart.data.labels = salesData.labels;
            salesChart.data.datasets[0].data = salesData.data;
            salesChart.update();
        }
    }
    
    function updateCustomersChart(customersData) {
        if (customersChart) {
            customersChart.data.labels = customersData.labels;
            customersChart.data.datasets[0].data = customersData.data;
            customersChart.update();
        }
    }
    
    function updateOrdersChart(ordersData) {
        if (ordersChart) {
            ordersChart.data.labels = ordersData.labels;
            ordersChart.data.datasets[0].data = ordersData.data;
            ordersChart.update();
        }
    }
    
    function updateCategoryChart(categoryData) {
        if (categoryChart) {
            categoryChart.data.labels = categoryData.labels;
            categoryChart.data.datasets[0].data = categoryData.data;
            categoryChart.update();
        }
    }
    
    function updateSummaryCards(summaryData) {
        // Update Total Revenue
        document.querySelector('.summary-card:nth-child(1) .summary-info h3').textContent = 
            'â‚¹' + Math.round(summaryData.totalRevenue).toLocaleString();
            
     
        
        // Update Total Customers
        const customerElement = document.querySelector('.summary-card:nth-child(2) .summary-info h3');
        if (customerElement && summaryData.totalCustomers) {
            customerElement.textContent = summaryData.totalCustomers.toLocaleString();
        }
        
        // Update Total Orders
        const orderElement = document.querySelector('.summary-card:nth-child(3) .summary-info h3');
        if (orderElement && summaryData.totalOrders) {
            orderElement.textContent = summaryData.totalOrders.toLocaleString();
        }
    }
    
    function getGrowthHTML(growthPercent) {
        const isIncrease = growthPercent >= 0;
        const className = isIncrease ? 'increase' : 'decrease';
        const icon = isIncrease ? 'fa-arrow-up' : 'fa-arrow-down';
        return `<i class="fas ${icon}"></i><span>${Math.abs(growthPercent)}%</span>`;
    }
});
</script>
